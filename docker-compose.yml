services:
  workers:
    image: ${WORKERS_IMAGE}
    deploy:
      replicas: 3
      mode: replicated
    environment:
      POSTGRES_URL: postgresql://${PG_USER}:${PG_PASSWORD}@postgres:5432/${PG_DB}
      COINGECKO_API_KEY: ${COINGECKO_API_KEY}
      QUICKNODE_SOLANA_RPC: ${QUICKNODE_SOLANA_RPC}
      ALCHEMY_SOLANA_RPC: ${ALCHEMY_SOLANA_RPC}
      NODE_ENV: ${NODE_ENV}
      BASE_URL: ${BASE_URL}
      MORALIS_API_KEY: ${MORALIS_API_KEY}
      MORALIS_STREAMS_SECRET_KEY: ${MORALIS_STREAMS_SECRET_KEY}
      REDIS_URL: redis
    networks:
      - app-network
    depends_on:
      postgres:
        condition: service_started
      redis:
        condition: service_started

  web-api:
    image: ${WEB_API_IMAGE}
    ports:
      - "80:80"
    environment:
      POSTGRES_URL: postgresql://${PG_USER}:${PG_PASSWORD}@postgres:5432/${PG_DB}
      COINGECKO_API_KEY: ${COINGECKO_API_KEY}
      QUICKNODE_SOLANA_RPC: ${QUICKNODE_SOLANA_RPC}
      ALCHEMY_SOLANA_RPC: ${ALCHEMY_SOLANA_RPC}
      NODE_ENV: ${NODE_ENV}
      BASE_URL: ${BASE_URL}
      MORALIS_API_KEY: ${MORALIS_API_KEY}
      MORALIS_STREAMS_SECRET_KEY: ${MORALIS_STREAMS_SECRET_KEY}
      REDIS_URL: redis
      API_TOKEN: ${API_TOKEN}
    networks:
      - app-network
    depends_on:
      postgres:
        condition: service_started
      redis:
        condition: service_started

  postgres:
    image: postgres:16.4
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      POSTGRES_DB: ${PG_DB}
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./db-data:/var/lib/postgresql/data
    networks:
      - app-network

  redis:
    image: redis:7.4.1-alpine
    networks:
      - app-network

networks:
  app-network:
