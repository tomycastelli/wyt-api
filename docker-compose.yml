services:
  workers:
    image: ${WORKERS_IMAGE}
    restart: unless-stopped
    deploy:
      replicas: 3
      mode: replicated
      resources:
        limits:
          memory: 512M
    environment:
      POSTGRES_URL: ${PG_URL}
      COINGECKO_API_KEY: ${COINGECKO_API_KEY}
      QUICKNODE_SOLANA_RPC: ${QUICKNODE_SOLANA_RPC}
      ALCHEMY_SOLANA_RPC: ${ALCHEMY_SOLANA_RPC}
      NODE_ENV: production
      BASE_URL: ${BASE_URL}
      MORALIS_API_KEY: ${MORALIS_API_KEY}
      MORALIS_STREAMS_SECRET_KEY: ${MORALIS_STREAMS_SECRET_KEY}
      REDIS_URL: redis
    networks:
      - app-network
    depends_on:
      redis:
        condition: service_started

  web-api:
    image: ${WEB_API_IMAGE}
    restart: unless-stopped
    ports:
      - "80:80"
    environment:
      POSTGRES_URL: ${PG_URL}
      COINGECKO_API_KEY: ${COINGECKO_API_KEY}
      QUICKNODE_SOLANA_RPC: ${QUICKNODE_SOLANA_RPC}
      ALCHEMY_SOLANA_RPC: ${ALCHEMY_SOLANA_RPC}
      NODE_ENV: production
      BASE_URL: ${BASE_URL}
      MORALIS_API_KEY: ${MORALIS_API_KEY}
      MORALIS_STREAMS_SECRET_KEY: ${MORALIS_STREAMS_SECRET_KEY}
      REDIS_URL: redis
      API_TOKEN: ${API_TOKEN}
    networks:
      - app-network
    depends_on:
      redis:
        condition: service_started
    deploy:
      resources:
        limits:
          memory: 512M

  redis:
    image: redis:7.4.1-alpine
    restart: unless-stopped
    networks:
      - app-network
    command:
      [
        "redis-server",
        "--maxmemory",
        "2048mb",
        "--maxmemory-policy",
        "noeviction",
      ]
    deploy:
      resources:
        limits:
          memory: 2G

networks:
  app-network:
